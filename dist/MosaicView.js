!function(t,i){"object"==typeof exports&&"object"==typeof module?module.exports=i():"function"==typeof define&&define.amd?define("MosaicView",[],i):"object"==typeof exports?exports.MosaicView=i():t.MosaicView=i()}(window,(function(){return function(t){var i={};function e(o){if(i[o])return i[o].exports;var n=i[o]={i:o,l:!1,exports:{}};return t[o].call(n.exports,n,n.exports,e),n.l=!0,n.exports}return e.m=t,e.c=i,e.d=function(t,i,o){e.o(t,i)||Object.defineProperty(t,i,{enumerable:!0,get:o})},e.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},e.t=function(t,i){if(1&i&&(t=e(t)),8&i)return t;if(4&i&&"object"==typeof t&&t&&t.__esModule)return t;var o=Object.create(null);if(e.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:t}),2&i&&"string"!=typeof t)for(var n in t)e.d(o,n,function(i){return t[i]}.bind(null,n));return o},e.n=function(t){var i=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(i,"a",i),i},e.o=function(t,i){return Object.prototype.hasOwnProperty.call(t,i)},e.p="",e(e.s=0)}([function(t,i,e){"use strict";e.r(i),e.d(i,"default",(function(){return s}));class o extends Phaser.GameObjects.Graphics{constructor(t,i,e,o,n,r={}){super(t),this.setPosition(i,e),this.width=o,this.height=n,this.rowCount=r.rowCount,this.columnCount=r.columnCount,this.tileWidth=r.tileWidth,this.tileHeight=r.tileHeight,this.padding=r.padding,this.startWithPadding=r.startWithPadding,this.color=r.color,this.backgroundColor=r.backgroundColor,this.minColorDeviation=r.minColorDeviation,this.maxColorDeviation=r.maxColorDeviation,this.minAlpha=r.minAlpha,this.maxAlpha=r.maxAlpha,t.add.existing(this),this._drawMosaicView();const a=t.make.graphics();a.fillStyle(16777215),a.beginPath(),a.fillRect(0,0,this.width,this.height);const s=a.createGeometryMask();this.setMask(s)}destroy(){super.destroy()}_drawMosaicView(){this.clear(),this.fillStyle(this.backgroundColor,1),this.fillRect(0,0,this.width,this.height),this.fillStyle(this.color,1);for(let t=0;t<this.rowCount;t++)for(let i=0;i<this.columnCount;i++){if(this.minColorDeviation>0||this.maxColorDeviation>0){const t=Phaser.Math.FloatBetween(0,1)<.5?this._getRandomTintColor(this.color,this.minColorDeviation,this.maxColorDeviation):this._getRandomShadeColor(this.color,this.minColorDeviation,this.maxColorDeviation);this.fillStyle(this._getRandomTintColor(t,0,20),Phaser.Math.FloatBetween(this.minAlpha,this.maxAlpha))}this.fillRect(t*(this.tileWidth+this.padding)+(this.startWithPadding?this.padding:0),i*(this.tileHeight+this.padding)+(this.startWithPadding?this.padding:0),this.tileWidth,this.tileHeight)}}_getRandomShadeColor(t,i,e){const o=Phaser.Display.Color.ValueToColor(t);return o.darken(Phaser.Math.Between(i,e)),Phaser.Display.Color.GetColor(o.red,o.green,o.blue)}_getRandomTintColor(t,i,e){const o=Phaser.Display.Color.ValueToColor(t);return o.lighten(Phaser.Math.Between(i,e)),Phaser.Display.Color.GetColor(o.red,o.green,o.blue)}}const n=Phaser.Utils.Objects.GetValue,r=Phaser.GameObjects.BuildGameObject;var a=function(t,i,e,a,s){const l=t||0,h=i||0,d=e||100,c=a||100,u=n(s,"tileWidth",10),p=n(s,"tileHeight",10),m=n(s,"padding",2),f=n(s,"startWithPadding",!1),g=Math.ceil(d/(u+m)),C=Math.ceil(c/(p+m)),b=n(s,"color",255),y=n(s,"backgroundColor",65280),P=25*n(s,"minColorDeviation",0),x=Math.max(P,25*n(s,"maxColorDeviation",0)),v=n(s,"minAlpha",1),w=n(s,"maxAlpha",1),D=new o(this.scene,l,h,d,c,{rowCount:g,columnCount:C,tileWidth:u,tileHeight:p,padding:m,color:b,backgroundColor:y,startWithPadding:f,minColorDeviation:P,maxColorDeviation:x,minAlpha:v,maxAlpha:w});return r(this.scene,D,Object.assign(s,{x:l,y:h,add:!0})),D};class s extends Phaser.Plugins.BasePlugin{constructor(t){super(t),t.registerGameObject("mosaicView",a)}}}])}));